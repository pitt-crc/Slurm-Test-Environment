name: Test Docker Images

on:
  workflow_call:
  pull_request:
  push:
    branches: [ "latest" ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Test Images

    strategy:
      fail-fast: false
      matrix:
        slurm-tag: [ "slurm-20-02-5-1", "slurm-20-11-9-1", "slurm-22-05-2-1" ]

    steps:
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/test-env-${{ matrix.slurm-tag }}

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: SLURM_TAG=${{ matrix.slurm-tag }}
          outputs: type=docker,dest=${{ matrix.slurm-tag }}.tar

      - name: Load image into Docker
        run: docker load -i ${{ matrix.slurm-tag }}.tar

      - name: Test container is restartable
        run: |
          tag_array=(${{ steps.meta.outputs.tags }}) # Use the first tag from the tags array
          docker container create --name rerun_test_container ${tag_array[0]}
          docker container start -i rerun_test_container
          docker container start -i rerun_test_container
          docker container rm rerun_test_container

      - name: Test Slurm utilities are installed
        run: |
          tag_array=(${{ steps.meta.outputs.tags }})
          docker run --rm ${tag_array[0]} sacctmgr -V
          docker run --rm ${tag_array[0]} slurmctld -V
          docker run --rm ${tag_array[0]} slurmdbd -V

      - name: Upload artifact
        if: ${{ github.event_name }} == 'workflow_call'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.slurm-tag }}
          path: ${{ matrix.slurm-tag }}.tar
          retention-days: 5

  # This is a dummy job used to facilitate branch protections
  build-successful:
    if: ${{ always() }}
    name: Report Status
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Report status
        shell: bash
        run: |
          if [[ success == ${{ needs.build.result }} ]]
          then
            echo "Builds were successful"
          else
            echo "One or more matrix jobs failed."
            false
          fi
