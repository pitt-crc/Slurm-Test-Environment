name: Deploy Docker Images

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-tag: [ "python36", "python38", "python39" ]
        rocky-tag: [ "8" ]
        slurm-tag: [ "slurm-20-02-5-1", "slurm-20-11-9-1", "slurm-22-05-2-1" ]

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # This is used to complete the identity challenge

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.9.0'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/test-env-${{ matrix.rocky-tag }}-${{ matrix.slurm-tag }}-${{ matrix.python-tag }}

      # Build the image but do not publish it
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SLURM_TAG=${{ matrix.slurm-tag }}
            ROCKY_TAG=${{ matrix.rocky-tag }}
            PYTHON_TAG=${{ matrix.python-tag }}

      # Make sure sacctmgr executes
      - name: Test slurm install
        run: |
          docker run --rm ${{ steps.meta.outputs.tags }} sacctmgr -v

      # Build and push the image the container registry
      # This will use a cached copy of the previous build
      - name: Publish built image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SLURM_TAG=${{ matrix.slurm-tag }}
            ROCKY_TAG=${{ matrix.rocky-tag }}
            PYTHON_TAG=${{ matrix.python-tag }}
