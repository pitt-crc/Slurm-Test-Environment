name: Build Docker Images

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ "latest" ]

env:
  # Destination registry for publishing images
  REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    name: Define Build Options
    steps:
      - name: Setup build matrix
        id: setup-build-matrix
        run: |
          MATRIX='{
            "rocky-tag": [ "8" ], 
            "slurm-tag": [ "slurm-20-02-5-1", "slurm-20-11-9-1", "slurm-22-05-2-1" ], 
            "python-tag":[ "python36", "python38", "python39" ]
          }'
          
          echo ::set-output name=build-matrix::$MATRIX}

    outputs:
      build-matrix: ${{ steps.setup-build-matrix.outputs.build-matrix }}

  build:
    needs: [ setup-matrix ]
    runs-on: ubuntu-latest
    name: Build Docker Images

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.build-matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool to sign and verify container images
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.9.0'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/test-env-rocky${{ matrix.rocky-tag }}-${{ matrix.slurm-tag }}-${{ matrix.python-tag }}

      # Build the image but do not publish it
      # https://github.com/docker/build-push-action
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SLURM_TAG=${{ matrix.slurm-tag }}
            ROCKY_TAG=${{ matrix.rocky-tag }}
            PYTHON_TAG=${{ matrix.python-tag }}

      # Make sure sacctmgr executes
      - name: Test slurm install
        run: |
          docker run --rm ${{ steps.meta.outputs.tags }} sacctmgr --version
              echo ::set-output name=build-matrix::$MATRIX}

    outputs:
      labels: ${{ steps.meta.outputs.labels }}
      tags: ${{ steps.meta.outputs.tags }}

  publish:
    if: github.ref == 'refs/heads/latest' && github.event_name != 'pull_request'
    needs: [   setup-matrix, build ]
    runs-on: ubuntu-latest
    name: Publish Docker Images
    permissions:
      contents: read
      packages: write
      id-token: write # This is used to complete the identity challenge

    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.build-matrix) }}

    steps:
      # Build and push the image the container registry
      # This will use a cached copy of the previous build
      - name: Publish built image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.build.outputs.tags }}
          labels: ${{ needs.build.outputs.labels }}
          build-args: |
            SLURM_TAG=${{ matrix.slurm-tag }}
            ROCKY_TAG=${{ matrix.rocky-tag }}
            PYTHON_TAG=${{ matrix.python-tag }}
