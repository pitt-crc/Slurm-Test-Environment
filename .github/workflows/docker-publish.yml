name: Build Docker Images

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ "latest", "patch_ci" ]

env:
  # Destination registry for publishing images
  REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    name: Define Build Options
    steps:
      - name: Setup build matrix
        id: setup-build-matrix
        run: |
          MATRIX='{
            "rocky-tag": [ "8" ], 
            "slurm-tag": [ "slurm-20-02-5-1", "slurm-20-11-9-1", "slurm-22-05-2-1" ], 
            "python-tag":[ "python36", "python38", "python39" ]
          }'
          
          echo ::set-output name=build-matrix::$MATRIX}

    outputs:
      build-matrix: ${{ steps.setup-build-matrix.outputs.build-matrix }}

  build:
    needs: [ setup-matrix ]
    runs-on: ubuntu-latest
    name: Build Docker Images

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.build-matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Define the image name for use by other steps
      - name: Define image name
        id: image-name
        run: |
          NAME=test-env-rocky${{ matrix.rocky-tag }}-${{ matrix.slurm-tag }}-${{ matrix.python-tag }}
          echo ::set-output name=name::$NAME

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ steps.image-name.outputs.name }}

      # Build the image but do not publish it
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=image.tar
          build-args: |
            SLURM_TAG=${{ matrix.slurm-tag }}
            ROCKY_TAG=${{ matrix.rocky-tag }}
            PYTHON_TAG=${{ matrix.python-tag }}

      - name: Test tags
        run: echo '${{ steps.meta.outputs.tags }}'

      # Make sure sacctmgr executes
      - name: Test slurm install
        run: |
          docker load --input image.tar
          docker run --rm ${{ steps.meta.outputs.tags }} sacctmgr --version

      # Cache the built image for use in other jobs
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.image-name.outputs.name }}
          path: image.tar
          if-no-files-found: error

  publish:
    # if: github.ref == 'refs/heads/latest' && github.event_name == 'push'  # Only publish from the latest branch
    needs: [ setup-matrix, build ]
    runs-on: ubuntu-latest
    name: Publish Docker Images
    permissions:
      contents: read
      packages: write
      id-token: write # This is used to complete the identity challenge

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.build-matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Define the image name for use by other steps
      - name: Define image name
        id: image-name
        run: |
          NAME=test-env-rocky${{ matrix.rocky-tag }}-${{ matrix.slurm-tag }}-${{ matrix.python-tag }}
          echo ::set-output name=name::$NAME

      - name: Fetch image from cache
        uses: actions/download-artifact@v2
        with:
          name: ${{ steps.image-name.outputs.name }}
          path: .

      - name: Push image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ github.ref_name }}
          cache-from: type=local,src=image.tar
